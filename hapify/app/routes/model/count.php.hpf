<?php 
 
/**
 * Count <<Model lower>>.
 */
 
use Psr\Http\Message\ResponseInterface as Response;
use Psr\Http\Message\ServerRequestInterface as Request;
use Valitron\Validator as Validator;
use App\Library\HttpException;
 
$_func = function (Request $request, Response $response, array $args) {

<<# If the count action is not accessible as guest, check the credentials >>
<<if CountAccess not guest>>
 
    //Authentication
    $this->get('session')->verifyCredentials($request);
<<endif>>
 
    $_get = $request->getQueryParams();
 
    $validator = new Validator($_get);
 
    // forbidden keys
<<# Remove all non-seachable keys >>
<<for Fields not searchable f>>
    unset($_get['<<f snake>>']);
<<endfor>>
    
    if ($validator->validate()) {
 
        $query = App\Models\<<Model pascal>>::getCursor($_get, $request);
 
        $total = $query->count();
        $data = array(
            'total' => $total,
        );
 
        $payload = json_encode($data);
 
        $response->getBody()->write($payload);
        return $response->withStatus(200);
    }
 
    // Bad Request
    throw HttpException::badRequest($validator);
};
 
//Define admin route callback
$app->get('/admin/<<Model kebab>>/count', $_func);
<<# If the count action is accessible at least as owner, add the public route >>
<<if CountAccess gteOwner>>
//Define route callback
$app->get('/<<Model kebab>>/count', $_func);
<<endif>>